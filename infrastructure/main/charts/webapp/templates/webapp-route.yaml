apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ template "app.fullname" . }}
  labels: {{ include "app.labels" . | nindent 4 }}
{{ if .Values.route.iprestricted }}
  annotations:
    haproxy.router.openshift.io/ip_whitelist: {{ .Values.global.route.ipallowlist  }}
{{ end }}
spec:
  to:
    kind: Service
    name: {{ template "app.fullname" . }}
  port:
    targetPort: 80-tcp
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
  host: {{ .Values.route.host  }}
  path: /api


---
{{- if .Values.route.vanityurl }}
{{- $routeExists := lookup "route.openshift.io/v1" "Route" .Release.Namespace (printf "%s-vanityurl" (include "app.fullname" .)) }}
{{- if not $routeExists }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ template "app.fullname" . }}-vanityurl
  labels: {{ include "app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
    {{ if .Values.route.iprestricted }}
    haproxy.router.openshift.io/ip_whitelist: {{ .Values.global.route.ipallowlist  }}
    {{ end }}
spec:
  to:
    kind: Service
    name: {{ template "app.fullname" . }}
  port:
    targetPort: 80-tcp
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
  host: {{ .Values.route.vanityurlhost  }}
  path: /api
{{- end }}
{{- end }}